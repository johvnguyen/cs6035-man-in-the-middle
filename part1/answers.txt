1.1. lead.libera.chat[94.125.182.252/6667]
    Based on how the question is asked, I think they want the string.
    For now, its not obvious, so lets keep both the string and the ip/port
1.2. PingWizard,CodePhanton,ByteRunner
    There are other names like !~ZenCipher that didn't seem to show up as often...
1.3. #tnc25_
1.4. 4049f7c78449443fd2451a8520109b7f10c17b85640017b34cbf96866efe3171
    This might actually be the private key used in 2.4
    Double check this one.
1.5. Hungary
    You can see PingWizard is from Budapest, HU

2.1. CodePhanton
    Its a convo between PingWizard and CodePhanton.
    In IRC chat, we see PingWizard send CodePhanton a file
    In the convo, we see blue says "i got the file you are looking for", so blue must be PingWizard.
    Red started the chat, so red must be CodePhanton
2.2. file_1600.nen
2.3. PGP
    But this doesn't make sense. PGP requires a private key and a public key, but none are given.
    Can be filtered for with:
        ip.addr == 10.0.0.7 && tcp.port == 54115
2.4. 
    Skip this one for now.
    I don't have the public/private keys to decode this...
    Can be filtered for with:
        ip.addr == 10.0.0.7 && tcp.port == 54115
    I am looking for CodePhanton's private key
    <Setting name="ProvisionCertificate|TenantEncryptionCert" value="sha1:20407955B653D58AD4C41AAECDE3E63506002C22" />
    ip.dst == 10.0.0.7 && frame.time_relative >= 3418 && frame.time_relative <= 4141
    

3.1. necrocryptors.com
    Looked at list of DNS requests, and this stood out.
3.2. 168.63.129.16
3.3. ns-cloud-e1.googledomains.com
    Lookup a DNS request containing necrocryptors.com (that didn't error) and go to it's response message.
    The response will contain the DNS server.
3.4. 62a8e21af70b76d0c7f5d17db53d48cddc705913ea7e2c72feb8c98f7177ac285aa502e0266ef032b1942e2737435624d9c22a60b688cdbcb8e61caee69ab728

4.1. 10.0.0.6
    We see someone trying to login ~4548
4.2. l0gg3d
4.3. X8f$2jR9wLp!zQ1V32145
4.4. file_2600.findout
4.5. Python
    Found in packet tcp.stream == 2661
4.6.
    I dont know how to convert tcp.stream == 2661 into a Python package.

5.1. 62a8e21af70b76d0c7f5d17db53d48cddc705913ea7e2c72feb8c98f7177ac28afa268452362a1c7a81fe87a43b2db669a6228901000a12c99bb3690c90d4f8d
    IDK
5.2. 8030276
    Ran John the Ripper
5.3. 62a8e21af70b76d0c7f5d17db53d48cddc705913ea7e2c72feb8c98f7177ac28fccf03b0a7ae0531210768cce4851f9f48b5d3d491d0ae9552b0e5a7136080dc
    After openning with password, we get base 64
    Putting it into base 64, we apply the [A-Z]+13 rotation cipher to get the program




